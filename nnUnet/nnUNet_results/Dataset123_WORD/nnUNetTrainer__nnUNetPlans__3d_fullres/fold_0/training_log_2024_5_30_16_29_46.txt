
#######################################################################
Please cite the following paper when using nnU-Net:
Isensee, F., Jaeger, P. F., Kohl, S. A., Petersen, J., & Maier-Hein, K. H. (2021). nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation. Nature methods, 18(2), 203-211.
#######################################################################
 
2024-05-30 16:29:46.372463: do_dummy_2d_data_aug: False 
2024-05-30 16:29:46.373594: Using splits from existing split file: /home/graduate/shaghayegh/computer vision/finall project/nnUNet_preprocessed/Dataset123_WORD/splits_final.json 
2024-05-30 16:29:46.373889: The split file contains 5 splits. 
2024-05-30 16:29:46.373971: Desired fold for training: 0 
2024-05-30 16:29:46.374065: This split has 96 training and 24 validation cases. 
2024-05-30 16:29:59.413013: Using torch.compile... 

This is the configuration used by this training:
Configuration name: 3d_fullres
 {'data_identifier': 'nnUNetPlans_3d_fullres', 'preprocessor_name': 'DefaultPreprocessor', 'batch_size': 2, 'patch_size': [64, 192, 160], 'median_image_size_in_voxels': [198.5, 512.0, 512.0], 'spacing': [3.0, 0.9765625, 0.9765625], 'normalization_schemes': ['CTNormalization'], 'use_mask_for_norm': [False], 'resampling_fn_data': 'resample_data_or_seg_to_shape', 'resampling_fn_seg': 'resample_data_or_seg_to_shape', 'resampling_fn_data_kwargs': {'is_seg': False, 'order': 3, 'order_z': 0, 'force_separate_z': None}, 'resampling_fn_seg_kwargs': {'is_seg': True, 'order': 1, 'order_z': 0, 'force_separate_z': None}, 'resampling_fn_probabilities': 'resample_data_or_seg_to_shape', 'resampling_fn_probabilities_kwargs': {'is_seg': False, 'order': 1, 'order_z': 0, 'force_separate_z': None}, 'architecture': {'network_class_name': 'dynamic_network_architectures.architectures.unet.PlainConvUNet', 'arch_kwargs': {'n_stages': 6, 'features_per_stage': [32, 64, 128, 256, 320, 320], 'conv_op': 'torch.nn.modules.conv.Conv3d', 'kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]], 'strides': [[1, 1, 1], [1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]], 'n_conv_per_stage': [2, 2, 2, 2, 2, 2], 'n_conv_per_stage_decoder': [2, 2, 2, 2, 2], 'conv_bias': True, 'norm_op': 'torch.nn.modules.instancenorm.InstanceNorm3d', 'norm_op_kwargs': {'eps': 1e-05, 'affine': True}, 'dropout_op': None, 'dropout_op_kwargs': None, 'nonlin': 'torch.nn.LeakyReLU', 'nonlin_kwargs': {'inplace': True}, 'deep_supervision': True}, '_kw_requires_import': ['conv_op', 'norm_op', 'dropout_op', 'nonlin']}, 'batch_dice': True} 
 
These are the global plan.json settings:
 {'dataset_name': 'Dataset123_WORD', 'plans_name': 'nnUNetPlans', 'original_median_spacing_after_transp': [3.0, 0.9765625, 0.9765625], 'original_median_shape_after_transp': [201, 512, 512], 'image_reader_writer': 'SimpleITKIO', 'transpose_forward': [0, 1, 2], 'transpose_backward': [0, 1, 2], 'experiment_planner_used': 'ExperimentPlanner', 'label_manager': 'LabelManager', 'foreground_intensity_properties_per_channel': {'0': {'max': 3071.0, 'mean': 18.70482063293457, 'median': 53.0, 'min': -3024.0, 'percentile_00_5': -988.0, 'percentile_99_5': 658.0, 'std': 208.73194885253906}}} 
 
2024-05-30 16:30:01.899846: unpacking dataset... 
2024-05-30 16:30:07.842424: unpacking done... 
2024-05-30 16:30:07.870333: Unable to plot network architecture: nnUNet_compile is enabled! 
2024-05-30 16:30:07.896981:  
2024-05-30 16:30:07.897436: Epoch 0 
2024-05-30 16:30:07.897741: Current learning rate: 0.01 
